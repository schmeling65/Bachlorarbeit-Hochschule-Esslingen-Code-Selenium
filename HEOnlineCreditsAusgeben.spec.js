// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
import "dotenv/config";

describe('HEOnline_CreditsAusgeben', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('HEOnline_CreditsAusgeben', async function() {
    await driver.manage().setTimeouts({ implicit: 2000 });
    await driver.manage().window().setRect({ width: 1302, height: 923 })
    await driver.get("https://heonline.hs-esslingen.de/")
    await driver.findElement(By.css(".btn")).click()
    await driver.findElement(By.id("username")).sendKeys(process.env.loginname.toString())
    await driver.findElement(By.id("password")).sendKeys(process.env.loginpassword.toString())
    await driver.findElement(By.name("_eventId_proceed")).click()
    await driver.findElement(By.css("#co-access-wrapper-co_loc_zug_48513-st .ca-link")).click()
    await driver.wait(until.elementLocated(By.className("progress-and-main-info")),10000);
    const creditValueField = await driver.findElement(By.className("credits-value"))
    const credits = await creditValueField.findElement(By.className("part")).getText();
    const creditsinsgesamt = await creditValueField.findElement(By.className('complete')).getText();
    assert(credits <= creditsinsgesamt, "Die Creditsanzahl übersteigt die mögliche Maximalanzahl")
    assert(credits > 0, "Die Creditsanzahl kann nicht negativ sein")
    assert(creditsinsgesamt > 0, "Die gesamte Creditsanzahl kann nicht negativ sein")
    console.log(credits + " Credits erreicht von " + creditsinsgesamt)
  })
})
